% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/match_weight.R
\name{match_weight}
\alias{match_weight}
\title{matching weights}
\usage{
match_weight(tr, cl, id, data = NULL, trv = 1)
}
\arguments{
\item{tr}{the binary treatment variable, as character}

\item{cl}{the clustering variable, as character}

\item{id}{the id variable, as character.}

\item{data}{the data}

\item{trv}{the value of the treatment (of variable \code{tr}), '1' by
default}
}
\value{
data frame with new parameters \code{n}, number of individuals in
each cluster, \code{tr_n} the number of treated within the cluster,
\code{ctrl_n} the number of controls within the cluster,
\code{ate.weight} the weight for calculating the average treatment
effect, \code{att.weight} the weight for calculating the average
treatment effect for the treated, \code{atc.weight} the weight for
calculating the average treatment effect for the controls, \code{cid}
for describing the match it is useful to have a 'cluster id', use this
with e.g. \code{dplyr::group_by(tr, cid)} and \code{summarise} with
functions using \code{weight = cl.weight} to get stats for weighted
treated and control statistics.
}
\description{
Different weightings and some additional details I find useful
in connection with a fullmatch (or similar matching)
}
\examples{
df <- data.frame(
   id = 1:13,
   foo = c(0,0,1, 0,1, 1,1,0, 1,1,0,0, 0),
   bar = c(rep(c(letters[1:4]), c(3,2,3,4)), NA),
   x = round(runif(13),2)
)
str(match_weight(data = df, tr = "foo", cl = "bar", id = "id"))
df$foo <- ifelse(df$foo == 1, "Treated", "Control")
str(match_weight(tr = df$foo, cl = df$bar, id = df$id, trv = "Treated"))
}
